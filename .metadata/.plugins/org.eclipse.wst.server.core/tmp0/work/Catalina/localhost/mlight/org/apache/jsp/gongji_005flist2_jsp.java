/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2020-08-21 05:17:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import javax.sql.*;
import java.io.*;
import service.*;
import domain.*;
import java.util.List;

public final class gongji_005flist2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("service");
    _jspx_imports_packages.add("domain");
    _jspx_imports_packages.add("javax.sql");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<style>\r\n");
      out.write("div.center { /*테이블 페이지 숫자 상대적 포지션으로 정렬*/\r\n");
      out.write("\twidth: 310px;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tbottom: 10px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"user-scalable=no, width=device-width\" />\r\n");
      out.write("<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\r\n");
      out.write("<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\r\n");
      out.write("<meta http-equiv=\"Cache-Control\" content=\"no-cache\" />\r\n");
      out.write("<meta http-equiv=\"Expires\" content=\"0\" />\r\n");
      out.write("<meta http-equiv=\"Pragma\" content=\"no-cache\" />\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"http://netdna.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.js\"></script>\r\n");
      out.write("<!-- 부트스트랩 -->\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"http://netdna.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.css\"\r\n");
      out.write("\trel=\"stylesheet\">\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"https://fonts.googleapis.com/css2?family=Cinzel&family=Noto+Serif+KR:wght@200&display=swap\"\r\n");
      out.write("\trel=\"stylesheet\">\r\n");
      out.write("<style>\r\n");
      out.write("</style>\r\n");
      out.write("<title></title>\r\n");
      out.write("</head>\r\n");
      out.write("<body BACKGROUND=\"./image/bg.png\">\r\n");
      out.write("\t<center>\r\n");
      out.write("\t\t<h2 style=\"font-family: 'Cinzel', serif;\">Review</h2>\r\n");
      out.write("\t\t<table class=\"table table-bordered\" style=\"width: 310px;\"\r\n");
      out.write("\t\t\tcellspacing=1 border=1>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td width=25><span\r\n");
      out.write("\t\t\t\t\tstyle=\"display: inline-block; width: 100%; text-align: center;\">번호</span></td>\r\n");
      out.write("\t\t\t\t<td width=50><span\r\n");
      out.write("\t\t\t\t\tstyle=\"display: inline-block; width: 100%; text-align: center;\">제목</span></td>\r\n");
      out.write("\t\t\t\t<td width=30><span\r\n");
      out.write("\t\t\t\t\tstyle=\"display: inline-block; width: 100%; text-align: center;\">파일</span></td>\r\n");
      out.write("\t\t\t\t<td width=38><span\r\n");
      out.write("\t\t\t\t\tstyle=\"display: inline-block; width: 100%; text-align: center;\">조회수</span></td>\r\n");
      out.write("\t\t\t\t<td width=47><span\r\n");
      out.write("\t\t\t\t\tstyle=\"display: inline-block; width: 100%; text-align: center;\">등록일</span></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");

				request.setCharacterEncoding("utf-8");//인코딩
			String cnt = request.getParameter("cnt"); //get방식으로 파라미터 받아오기, 몇개 출력
			String num = request.getParameter("num"); // get방식으로 파라미터 받아오기, 페이지번호
			String what = request.getParameter("what"); // post방식으로 파라미터 받아오기
			String search = request.getParameter("search"); // post방식으로 파라미터 받아오기

			if (cnt == null) {
				cnt = "10";
			}
			if (num == null) { // 페이지번호의 기본값은 1
				num = "1";
			}

			NoticeService4 service = new NoticeService4(); // 인스턴스 생성
			int total = 0;
			if (search != null) {
				for (Notice4 n : service.selectAll(what, search)) {
					total++;
				}
			} else {
				for (Notice4 n : service.selectAll()) {
					total++;
				}
			}
			int pageSize = 10; // 제일 아래 나열된 페이지 번호 개수
			int LineCnt = 1; // 시작 번호
			int cntPT = Integer.parseInt(cnt);// 변수에 값을 인트로 변환해서 넣는다
			int pageNum = Integer.parseInt(num); // 변수에 값을 인트로 변환해서 넣는다
			int start = (pageNum - 1) * cntPT + 1; // 만약 10개씩 본다면 1, 11, 21, 순
			int end = pageNum * cntPT; // 만약 10개씩 본다면 10 20 30 순
			int pageCount = total / cntPT + (total % cntPT == 0 ? 0 : 1);
			// 몇페이지까지 나오는지 계산
			int startPage = ((int) (pageNum / pageSize) - (pageNum % pageSize == 0 ? 1 : 0)) * pageSize + 1;
			// 시작하는 페이지번호
			int endPage = startPage + pageSize; // 끝나는 페이지 번호
			if (endPage > pageCount) {// 만약 끝나는 페이지가 마지막 페이지보다 크다면
				endPage = pageCount + 1; // 마지막 페이지와 같게 만듬
			}
			if (search != null) {
				for (Notice4 n : service.selectAll(what, search)) { // 모든 글 검색 및 뿌리기
					if (LineCnt < start) {
				LineCnt++;
				continue;
					}

					if (LineCnt > end) {

				break;
					}
			
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td width=25><span\r\n");
      out.write("\t\t\t\t\tstyle=\"display: inline-block; width: 100%; text-align: center;\">");
      out.print(n.getId());
      out.write("</span></td>\r\n");
      out.write("\t\t\t\t<td width=50><span><a\r\n");
      out.write("\t\t\t\t\t\thref=\"gongji_view2.jsp?key=");
      out.print(n.getId());
      out.write('"');
      out.write('>');
      out.print(n.getTitle());
      out.write("</a> </span></td>\r\n");
      out.write("\t\t\t\t<td width=30>\r\n");
      out.write("\t\t\t\t\t");

						if (n.getFilename() != null) {
					
      out.write(" <span class=\"glyphicon glyphicon-floppy-disk\" aria-hidden=\"true\"\r\n");
      out.write("\t\t\t\t\tstyle=\"display: inline-block; width: 100%; text-align: center;\"></span>\r\n");
      out.write("\t\t\t\t\t");

						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t<td width=38><span\r\n");
      out.write("\t\t\t\t\tstyle=\"display: inline-block; width: 100%; text-align: center;\">");
      out.print(n.getViewcnt());
      out.write("</span></td>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<td width=47><span\r\n");
      out.write("\t\t\t\t\tstyle=\"display: inline-block; width: 100%; text-align: center;\"><font size=0.5>");
      out.print(n.getDate());
      out.write("</font></span></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");

				LineCnt++;
			}
			} else {
			for (Notice4 n : service.selectAll()) { // 모든 글 검색 및 뿌리기
			if (LineCnt < start) { // 시작번호가 카운트보다 높으면 지나감
				LineCnt++;
				continue;
			}
			if (LineCnt > end) { // 끝번호보다 카운트가 높으면 멈춤
				break;
			}
			
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td width=25><span\r\n");
      out.write("\t\t\t\t\tstyle=\"display: inline-block; width: 100%; text-align: center;\">");
      out.print(n.getId());
      out.write("</span></td>\r\n");
      out.write("\t\t\t\t<td width=50><span><a\r\n");
      out.write("\t\t\t\t\t\thref=\"gongji_view2.jsp?key=");
      out.print(n.getId());
      out.write('"');
      out.write('>');
      out.print(n.getTitle());
      out.write("</a> </span></td>\r\n");
      out.write("\t\t\t\t<td width=30>\r\n");
      out.write("\t\t\t\t\t");

						if (n.getFilename() != null) {
					
      out.write(" <span class=\"glyphicon glyphicon-floppy-disk\" aria-hidden=\"true\"\r\n");
      out.write("\t\t\t\t\tstyle=\"display: inline-block; width: 100%; text-align: center;\"></span>\r\n");
      out.write("\t\t\t\t\t");

						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t<td width=38><span\r\n");
      out.write("\t\t\t\t\tstyle=\"display: inline-block; width: 100%; text-align: center;\">");
      out.print(n.getViewcnt());
      out.write("</span></td>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<td width=47><span\r\n");
      out.write("\t\t\t\t\tstyle=\"display: inline-block; width: 100%; text-align: center;\"><font size=0.5>");
      out.print(n.getDate());
      out.write("</font></span></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");

				LineCnt++;
			}
			}
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<table width=310>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td width=310>\r\n");
      out.write("\t\t\t\t\t");

						if (search != null) {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<button type=button class=\"btn btn-default\"\r\n");
      out.write("\t\t\t\t\t\tOnclick=\"window.location='gongji_list2.jsp'\">목록</button> ");

 	}
 
      out.write("\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t<td><button type=button class=\"btn btn-default\"\r\n");
      out.write("\t\t\t\t\t\tOnclick=\"window.location='gongji_insert2.jsp'\">신규</button></td>\r\n");
      out.write("\t\t\t\t<!-- 글쓰기 창으로 -->\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t\t<table width=200 border=0 cellspacing=0 cellpadding=0>\r\n");
      out.write("\t\t\t<form method=\"post\" action=\"gongji_list2.jsp\"\r\n");
      out.write("\t\t\t\tclass=\"navbar-form navbar-left\" role=\"search\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td width=200><div align=center>\r\n");
      out.write("\t\t\t\t\t\t<select class=\"form-control\" name=what>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"제목\">제목\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"내용\">내용<br>\r\n");
      out.write("\t\t\t\t\t\t</select>&nbsp;<input type=\"text\" class=\"form-control\" placeholder=\"Search\"\r\n");
      out.write("\t\t\t\t\t\t\tname=\"search\" style=\"width: 200px;\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-default\" name=\"submit\">검색</button>\r\n");
      out.write("\t\t\t\t\t</div></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<div class=\"center\">\r\n");
      out.write("\t\t\t<!--div-->\r\n");
      out.write("\t\t\t<nav aria-label=\"Page navigation\">\r\n");
      out.write("\t\t\t\t<ul class=\"pagination\">\r\n");
      out.write("\t\t\t\t\t");

						if (startPage - pageSize < 0) { // '<<' 누를 때 최소로 나오는 번호가 1일 수 있도록 마이너스가 안나오게
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href=\"./gongji_list2.jsp?num=1&cnt=");
      out.print(cntPT);
      out.write("\"\r\n");
      out.write("\t\t\t\t\t\taria-label=\"Previous\"><span aria-hidden=\"true\">&laquo;</span></a></li>\r\n");
      out.write("\t\t\t\t\t");

						} else {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a\r\n");
      out.write("\t\t\t\t\t\thref=\"./gongji_list2.jsp?num=");
      out.print(startPage - pageSize);
      out.write("&cnt=");
      out.print(cntPT);
      out.write("\"\r\n");
      out.write("\t\t\t\t\t\taria-label=\"Previous\"><span aria-hidden=\"true\">&laquo;</span></a></li>\r\n");
      out.write("\t\t\t\t\t");

						}
					for (int i = startPage; i < endPage; i++) { // 페이지번호 출력
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href=\"./gongji_list2.jsp?num=");
      out.print(i);
      out.write("&cnt=");
      out.print(cntPT);
      out.write('"');
      out.write('>');
      out.print(i);
      out.write("</a></li>\r\n");
      out.write("\t\t\t\t\t");

						}
					if (startPage + pageSize > pageCount) {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a\r\n");
      out.write("\t\t\t\t\t\thref=\"./gongji_list2.jsp?num=");
      out.print(pageCount);
      out.write("&cnt=");
      out.print(cntPT);
      out.write("\">&raquo;</a>\r\n");
      out.write("\t\t\t\t\t<li>\r\n");
      out.write("\t\t\t\t\t\t");

							} else {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<li><a\r\n");
      out.write("\t\t\t\t\t\thref=\"./gongji_list2.jsp?num=");
      out.print((startPage + pageSize));
      out.write("&cnt=");
      out.print(cntPT);
      out.write("\"\r\n");
      out.write("\t\t\t\t\t\taria-label=\"Next\"> <span aria-hidden=\"true\">&raquo;</span>\r\n");
      out.write("\t\t\t\t\t</a></li>\r\n");
      out.write("\t\t\t\t\t");

						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</nav>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</center>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
