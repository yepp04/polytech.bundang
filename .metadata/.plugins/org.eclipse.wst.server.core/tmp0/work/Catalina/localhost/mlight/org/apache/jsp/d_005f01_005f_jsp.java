/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2020-08-19 00:45:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Calendar;
import service.*;
import domain.*;
import java.util.List;

public final class d_005f01_005f_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

public boolean isDate(int m, int d, int y) // This method is used to check for a VALID date
	{
		m -= 1;
		Calendar c = Calendar.getInstance();
		c.setLenient(false);

		try {
			c.set(y, m, d);
			Date dt = c.getTime();
		} catch (IllegalArgumentException e) {
			return false;

		}
		return true;
	}
public String getDateName(int monthNumber) // This method is used to quickly return the proper name of a month
	{
		String strReturn = "";
		switch (monthNumber) {
			case 0 :
				strReturn = "January";
				break;
			case 1 :
				strReturn = "February";
				break;
			case 2 :
				strReturn = "March";
				break;
			case 3 :
				strReturn = "April";
				break;
			case 4 :
				strReturn = "May";
				break;
			case 5 :
				strReturn = "June";
				break;
			case 6 :
				strReturn = "July";
				break;
			case 7 :
				strReturn = "August";
				break;
			case 8 :
				strReturn = "September";
				break;
			case 9 :
				strReturn = "October";
				break;
			case 10 :
				strReturn = "November";
				break;
			case 11 :
				strReturn = "December";
				break;
		}
		return strReturn;
	}
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("service");
    _jspx_imports_packages.add("domain");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Calendar");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	// JSP Calendar:--
// Created by Jason Benassi
// jbenassi@lime-light.com
// http://www.wakeboardutah.com
// 7-2002

      out.write('\r');
      out.write('\n');

	// Global Vars
int action = 0; // incoming request for moving calendar up(1) down(0) for month
int currYear = 0; // if it is not retrieved from incoming URL (month=) then it is set to current year
int currMonth = 0; // same as year
int currYear2 = 0; // if it is not retrieved from incoming URL (month=) then it is set to current year
int currMonth2 = 0; // same as year
String boxSize = "130"; // how big to make the box for the calendar

//build 2 calendars

Calendar c = Calendar.getInstance();
Calendar cal = Calendar.getInstance();
Calendar ca = Calendar.getInstance();
Calendar ca2 = Calendar.getInstance();

if (request.getParameter("action") == null) // Check to see if we should set the year and month to the current
{
	currMonth = c.get(c.MONTH);
	currYear = c.get(c.YEAR);
	currMonth2 = c.get(c.MONTH);
	currYear2 = c.get(c.YEAR);
	cal.set(currYear, currMonth, 1);
	ca.set(currYear2, currMonth2, 1);
}

else {
	if (!(request.getParameter("action") == null)) // Hove the calendar up or down in this if block
	{
		currMonth = Integer.parseInt(request.getParameter("month"));
		currMonth2 = Integer.parseInt(request.getParameter("month"));
		currYear = Integer.parseInt(request.getParameter("year"));
		currYear2 = Integer.parseInt(request.getParameter("year"));

		if (Integer.parseInt(request.getParameter("action")) == 1) {
	cal.set(currYear, currMonth, 1);
	ca.set(currYear2, currMonth2, 1);
	cal.add(cal.MONTH, 1);
	ca.add(ca.MONTH, 1);
	currMonth = cal.get(cal.MONTH);
	currYear = cal.get(cal.YEAR);
	currMonth2 = ca.get(ca.MONTH);
	currYear2 = ca.get(ca.YEAR);
		} else {
	cal.set(currYear, currMonth, 1);
	ca.set(currYear2, currMonth2, 1);
	cal.add(cal.MONTH, -1);
	ca.add(ca.MONTH, -1);
	currMonth = cal.get(cal.MONTH);
	currYear = cal.get(cal.YEAR);
	currMonth2 = ca.get(ca.MONTH);
	currYear2 = ca.get(ca.YEAR);
		}
	}
}

      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html class=\"no-js\" lang=\"zxx\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n");
      out.write("<meta name=\"description\" content=\"\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"manifest\" href=\"site.webmanifest\">\r\n");
      out.write("<link rel=\"shortcut icon\" type=\"image/x-icon\"\r\n");
      out.write("\thref=\"assets/img/favicon.ico\">\r\n");
      out.write("<!-- Place favicon.ico in the root directory -->\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("a:link {\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a:visited {\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a:hover {\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("\ttext-decoration: underline;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction submit(val, room) {\r\n");
      out.write("\t\tdocument.getElementsByName('date')[0].value = val;\r\n");
      out.write("\t\tdocument.getElementsByName('room')[0].value = room;\r\n");
      out.write("\t\tdocument.getElementById('form').submit();\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("<!-- CSS here -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"assets/css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"assets/css/owl.carousel.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"assets/css/gijgo.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"assets/css/slicknav.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"assets/css/animate.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"assets/css/magnific-popup.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"assets/css/fontawesome-all.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"assets/css/themify-icons.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"assets/css/themify-icons.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"assets/css/slick.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"assets/css/nice-select.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"assets/css/style.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"assets/css/responsive.css\">\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"https://fonts.googleapis.com/css2?family=Cinzel&family=Noto+Serif+KR:wght@200&display=swap\"\r\n");
      out.write("\trel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("<body BACKGROUND=\"./image/bg.png\">\r\n");
      out.write("\r\n");
      out.write("\t<!-- Preloader Start -->\r\n");
      out.write("\t<div id=\"preloader-active\">\r\n");
      out.write("\t\t<div\r\n");
      out.write("\t\t\tclass=\"preloader d-flex align-items-center justify-content-center\">\r\n");
      out.write("\t\t\t<div class=\"preloader-inner position-relative\">\r\n");
      out.write("\t\t\t\t<div class=\"preloader-circle\"></div>\r\n");
      out.write("\t\t\t\t<div class=\"preloader-img pere-text\">\r\n");
      out.write("\t\t\t\t\t<strong>Real Light</b>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- Preloader Start -->\r\n");
      out.write("\r\n");
      out.write("\t<table border='1' width='910' celpadding='0' cellspacing='0'\r\n");
      out.write("\t\talign=center style=\"font-family: 'Noto Serif KR', serif;\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td width='172' align='right' valign='middle'><a\r\n");
      out.write("\t\t\t\thref=\"d_01_.jsp?month=");
      out.print(currMonth);
      out.write("&year=");
      out.print(currYear);
      out.write("&action=0\"><font\r\n");
      out.write("\t\t\t\t\tsize=\"2\"><b>Previous Month</b></font></a></td>\r\n");
      out.write("\t\t\t<td width='259' align='center' valign='middle'><b>");
      out.print(getDateName(cal.get(cal.MONTH)) + " " + cal.get(cal.YEAR));
      out.write("</b></td>\r\n");
      out.write("\t\t\t<td width='170' align='left' valign='middle'><a\r\n");
      out.write("\t\t\t\thref=\"d_01_.jsp?month=");
      out.print(currMonth);
      out.write("&year=");
      out.print(currYear);
      out.write("&action=1\"><font\r\n");
      out.write("\t\t\t\t\tsize=\"2\"><b>Next Month</b></font></a></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<form method=post id=\"form\" action=\"./d_02.jsp\"\r\n");
      out.write("\t\tstyle=\"font-family: 'Noto Serif KR', serif;\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"date\"> <input type=\"hidden\"\r\n");
      out.write("\t\t\tname=\"room\">\r\n");
      out.write("\t\t<table border=\"0\" width=\"520\" bordercolorlight=\"#C0C0C0\"\r\n");
      out.write("\t\t\tbordercolordark=\"#808080\" style=\"border-collapse: collapse\"\r\n");
      out.write("\t\t\tbordercolor=\"#111111\" cellpadding=\"0\" cellspacing=\"0\" align=center>\r\n");
      out.write("\t\t\t<td width=\"100%\">\r\n");
      out.write("\t\t\t\t<table border=\"2\" width=\"519\" bordercolorlight=\"#C0C0C0\"\r\n");
      out.write("\t\t\t\t\tbordercolordark=\"#000000\" style=\"border-collapse: collapse\"\r\n");
      out.write("\t\t\t\t\tbordercolor=\"#000000\" cellpadding=\"0\" cellspacing=\"0\"\r\n");
      out.write("\t\t\t\t\tbgcolor=\"#DFDCD8\">\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td width=\"");
      out.print(boxSize);
      out.write("\" align=\"center\" nowrap\r\n");
      out.write("\t\t\t\t\t\t\tbordercolor=\"#666666\" bgcolor=\"#666666\"><font color=\"red\">Sun</font></td>\r\n");
      out.write("\t\t\t\t\t\t<td width=\"");
      out.print(boxSize);
      out.write("\" align=\"center\" nowrap\r\n");
      out.write("\t\t\t\t\t\t\tbordercolor=\"#666666\" bgcolor=\"#666666\"><font\r\n");
      out.write("\t\t\t\t\t\t\tcolor=\"#FFFFFF\">Mon</font></td>\r\n");
      out.write("\t\t\t\t\t\t<td width=\"");
      out.print(boxSize);
      out.write("\" align=\"center\" nowrap\r\n");
      out.write("\t\t\t\t\t\t\tbordercolor=\"#666666\" bgcolor=\"#666666\"><font\r\n");
      out.write("\t\t\t\t\t\t\tcolor=\"#FFFFFF\">Tues</font></td>\r\n");
      out.write("\t\t\t\t\t\t<td width=\"");
      out.print(boxSize);
      out.write("\" align=\"center\" nowrap\r\n");
      out.write("\t\t\t\t\t\t\tbordercolor=\"#666666\" bgcolor=\"#666666\"><font\r\n");
      out.write("\t\t\t\t\t\t\tcolor=\"#FFFFFF\">Wed</font></td>\r\n");
      out.write("\t\t\t\t\t\t<td width=\"");
      out.print(boxSize);
      out.write("\" align=\"center\" nowrap\r\n");
      out.write("\t\t\t\t\t\t\tbordercolor=\"#666666\" bgcolor=\"#666666\"><font\r\n");
      out.write("\t\t\t\t\t\t\tcolor=\"#FFFFFF\">Thurs</font></td>\r\n");
      out.write("\t\t\t\t\t\t<td width=\"");
      out.print(boxSize);
      out.write("\" align=\"center\" nowrap\r\n");
      out.write("\t\t\t\t\t\t\tbordercolor=\"#666666\" bgcolor=\"#666666\"><font\r\n");
      out.write("\t\t\t\t\t\t\tcolor=\"#FFFFFF\">Fri</font></td>\r\n");
      out.write("\t\t\t\t\t\t<td width=\"");
      out.print(boxSize);
      out.write("\" align=\"center\" nowrap\r\n");
      out.write("\t\t\t\t\t\t\tbordercolor=\"#666666\" bgcolor=\"#666666\"><font\r\n");
      out.write("\t\t\t\t\t\t\tcolor=\"skyblue\">Sat</font></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t");

						//'Calendar loop
					ResvService resvService = new ResvService();
					int currDay;
					String todayColor;
					int count = 1;
					int dispDay = 1;
					int order = 0;
					SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
					String[][] resv_arr = new String[5][30];
					String resvName1 = "";
					String resvName2 = "";
					String resvName3 = "";

					for (int w = 1; w < 7; w++) {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t");

							for (int d = 1; d < 8; d++) {

							if (!(count >= cal.get(c.DAY_OF_WEEK))) {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<td width=\"");
      out.print(boxSize);
      out.write("\" height=\"");
      out.print(boxSize);
      out.write("\" valign=\"top\"\r\n");
      out.write("\t\t\t\t\t\t\talign=\"left\">&nbsp;</td>\r\n");
      out.write("\t\t\t\t\t\t");

							count += 1;
						} else {
						if (isDate(currMonth + 1, dispDay, currYear)) // use the isDate method
						{
							if (dispDay == c.get(c.DAY_OF_MONTH) && c.get(c.MONTH) == cal.get(cal.MONTH) && c.get(c.YEAR) == cal.get(cal.YEAR)) // Here we check to see if the current day is today
							{
								todayColor = "#9ca1cd";
								order++;
							} else {
								todayColor = "#ffffff";
							}

							if (c.get(c.MONTH) == cal.get(cal.MONTH) && order > 0 && order < 31) {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<td bgcolor=\"");
      out.print(todayColor);
      out.write("\" width=\"");
      out.print(boxSize);
      out.write("\" align=\"left\"\r\n");
      out.write("\t\t\t\t\t\t\theight=\"");
      out.print(boxSize);
      out.write("\" valign=\"top\">\r\n");
      out.write("\t\t\t\t\t\t\t");

								if (d == 1) {
							
      out.write(" <b style=\"color: red;\">");
      out.print(dispDay);
      out.write("</b>\r\n");
      out.write("\t\t\t\t\t\t\t");

								} else if (d == 7) {
							
      out.write("<b style=\"color: skyblue\";>");
      out.print(dispDay);
      out.write("</b> ");

 	} else {
 
      out.write(" <b>");
      out.print(dispDay);
      out.write("</b> ");

 	}
 
      out.write(" <br> <br> ");

 	resv_arr[0][order - 1] = sdf.format(ca2.getTime());
 resvName1 = resvService.selectOne(resv_arr[0][order - 1], 1).get(0).getName();
 resvName2 = resvService.selectOne(resv_arr[0][order - 1], 2).get(0).getName();
 resvName3 = resvService.selectOne(resv_arr[0][order - 1], 3).get(0).getName();
 if (resvName1 == null) {
 
      out.write(" <a href=\"#\" onclick=\"submit('");
      out.print(resv_arr[0][order - 1]);
      out.write("', 1)\">&nbsp;VIP</a><br>\r\n");
      out.write("\t\t\t\t\t\t\t");

								} else {
							
      out.write(" <font color=\"#a96800\">&nbsp;");
      out.print(resvName1.replace(resvName1.substring(1, 2), "*"));
      out.write("</font><br>\r\n");
      out.write("\t\t\t\t\t\t\t");

								}

							if (resvName2 == null) {
							
      out.write(" <a href=\"#\" onclick=\"submit('");
      out.print(resv_arr[0][order - 1]);
      out.write("', 2)\">&nbsp;Normal</a><br>\r\n");
      out.write("\t\t\t\t\t\t\t");

								} else {
							
      out.write(" <font color=\"#a96800\">&nbsp;");
      out.print(resvName2.replace(resvName2.substring(1, 2), "*"));
      out.write("</font><br>\r\n");
      out.write("\t\t\t\t\t\t\t");

								}
							if (resvName3 == null) {
							
      out.write(" <a href=\"#\" onclick=\"submit('");
      out.print(resv_arr[0][order - 1]);
      out.write("', 3)\">&nbsp;Reasonable</a><br>\r\n");
      out.write("\t\t\t\t\t\t\t");

								} else {
							
      out.write(" <font color=\"#a96800\">&nbsp;");
      out.print(resvName3.replace(resvName3.substring(1, 2), "*"));
      out.write("</font><br>\r\n");
      out.write("\t\t\t\t\t\t\t");

								}
							order++;
							ca2.add(ca2.DATE, +1);
							} else if (c.get(c.MONTH) + 1 == cal.get(cal.MONTH)
									&& order < 30 - (c.getActualMaximum(c.DAY_OF_MONTH) - c.get(c.DAY_OF_MONTH) + 1)) {
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<td bgcolor=\"");
      out.print(todayColor);
      out.write("\" width=\"");
      out.print(boxSize);
      out.write("\" align=\"left\"\r\n");
      out.write("\t\t\t\t\t\t\theight=\"");
      out.print(boxSize);
      out.write("\" valign=\"top\">\r\n");
      out.write("\t\t\t\t\t\t\t");

								if (d == 1) {
							
      out.write(" <b style=\"color: red;\">");
      out.print(dispDay);
      out.write("</b>\r\n");
      out.write("\t\t\t\t\t\t\t");

								} else if (d == 7) {
							
      out.write("<b style=\"color: skyblue\";>");
      out.print(dispDay);
      out.write("</b> ");

 	} else {
 
      out.write(" <b>");
      out.print(dispDay);
      out.write("</b> ");

 	}
 
      out.write(" <br> <br> ");

 	int order2 = order + (c.getActualMaximum(c.DAY_OF_MONTH) - c.get(c.DAY_OF_MONTH) + 1);
 resv_arr[0][order2] = sdf.format(ca.getTime());
 resvName1 = resvService.selectOne(resv_arr[0][order2], 1).get(0).getName();
 resvName2 = resvService.selectOne(resv_arr[0][order2], 2).get(0).getName();
 resvName3 = resvService.selectOne(resv_arr[0][order2], 3).get(0).getName();
 if (resvName1 == null) {
 
      out.write(" <a href=\"#\" onclick=\"submit('");
      out.print(resv_arr[0][order2]);
      out.write("', 1)\">&nbsp;VIP</a><br>\r\n");
      out.write("\t\t\t\t\t\t\t");

								} else {
							
      out.write(" <font color=\"#a96800\">&nbsp;");
      out.print(resvName1.replace(resvName1.substring(1, 2), "*"));
      out.write("</font><br>\r\n");
      out.write("\t\t\t\t\t\t\t");

								}
							if (resvName2 == null) {
							
      out.write(" <a href=\"#\" onclick=\"submit('");
      out.print(resv_arr[0][order2]);
      out.write("', 1)\">&nbsp;Normal</a><br>\r\n");
      out.write("\t\t\t\t\t\t\t");

								} else {
							
      out.write("<font color=\"#a96800\">&nbsp;");
      out.print(resvName2.replace(resvName2.substring(1, 2), "*"));
      out.write("</font><br>\r\n");
      out.write("\t\t\t\t\t\t\t");

								}
							if (resvName3 == null) {
							
      out.write(" <a href=\"#\" onclick=\"submit('");
      out.print(resv_arr[0][order2]);
      out.write("', 1)\">&nbsp;Reasonable</a><br>\r\n");
      out.write("\t\t\t\t\t\t\t");

								} else {
							
      out.write("<font color=\"#a96800\">&nbsp;");
      out.print(resvName1.replace(resvName1.substring(1, 2), "*"));
      out.write("</font><br>\r\n");
      out.write("\t\t\t\t\t\t\t");

								}
							
      out.write(' ');

 	order++;
 ca.add(ca.DATE, +1);
 } else {
 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<td bgcolor=\"");
      out.print(todayColor);
      out.write("\" width=\"");
      out.print(boxSize);
      out.write("\" align=\"left\"\r\n");
      out.write("\t\t\t\t\t\t\theight=\"");
      out.print(boxSize);
      out.write("\" valign=\"top\">\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t");
if (d == 1) {
								
      out.write(" <b style=\"color:red;\">");
      out.print(dispDay);
      out.write("</b>");
 
							} else if (d == 7) {
								
      out.write("<b style=\"color:skyblue\";>");
      out.print(dispDay);
      out.write("</b> ");
 	
							} else {
								
      out.write(" <b>");
      out.print(dispDay);
      out.write("</b> ");
 
							}
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t\t\t");

								}
							count += 1;
							dispDay += 1;
							} else {
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<td width=\"");
      out.print(boxSize);
      out.write("\" align=\"left\" height=\"");
      out.print(boxSize);
      out.write("\"\r\n");
      out.write("\t\t\t\t\t\t\tvalign=\"top\">&nbsp;</td>\r\n");
      out.write("\t\t\t\t\t\t");

							}
						}

						}
						
      out.write("\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t");

						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- JS here -->\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- All JS Custom Plugins Link Here here -->\r\n");
      out.write("\t\t<script src=\"./assets/js/vendor/modernizr-3.5.0.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- Jquery, Popper, Bootstrap -->\r\n");
      out.write("\t\t<script src=\"./assets/js/vendor/jquery-1.12.4.min.js\"></script>\r\n");
      out.write("\t\t<script src=\"./assets/js/popper.min.js\"></script>\r\n");
      out.write("\t\t<script src=\"./assets/js/bootstrap.min.js\"></script>\r\n");
      out.write("\t\t<!-- Jquery Mobile Menu -->\r\n");
      out.write("\t\t<script src=\"./assets/js/jquery.slicknav.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- Jquery Slick , Owl-Carousel Plugins -->\r\n");
      out.write("\t\t<script src=\"./assets/js/owl.carousel.min.js\"></script>\r\n");
      out.write("\t\t<script src=\"./assets/js/slick.min.js\"></script>\r\n");
      out.write("\t\t<!-- Date Picker -->\r\n");
      out.write("\t\t<script src=\"./assets/js/gijgo.min.js\"></script>\r\n");
      out.write("\t\t<!-- One Page, Animated-HeadLin -->\r\n");
      out.write("\t\t<script src=\"./assets/js/wow.min.js\"></script>\r\n");
      out.write("\t\t<script src=\"./assets/js/animated.headline.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- Scrollup, nice-select, sticky -->\r\n");
      out.write("\t\t<script src=\"./assets/js/jquery.scrollUp.min.js\"></script>\r\n");
      out.write("\t\t<script src=\"./assets/js/jquery.nice-select.min.js\"></script>\r\n");
      out.write("\t\t<script src=\"./assets/js/jquery.sticky.js\"></script>\r\n");
      out.write("\t\t<script src=\"./assets/js/jquery.magnific-popup.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- contact js -->\r\n");
      out.write("\t\t<script src=\"./assets/js/contact.js\"></script>\r\n");
      out.write("\t\t<script src=\"./assets/js/jquery.form.js\"></script>\r\n");
      out.write("\t\t<script src=\"./assets/js/jquery.validate.min.js\"></script>\r\n");
      out.write("\t\t<script src=\"./assets/js/mail-script.js\"></script>\r\n");
      out.write("\t\t<script src=\"./assets/js/jquery.ajaxchimp.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- Jquery Plugins, main Jquery -->\r\n");
      out.write("\t\t<script src=\"./assets/js/plugins.js\"></script>\r\n");
      out.write("\t\t<script src=\"./assets/js/main.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
