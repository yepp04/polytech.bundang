/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2020-08-21 05:12:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Calendar;
import service.*;
import domain.*;
import java.util.List;

public final class d_005f01_005fm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("service");
    _jspx_imports_packages.add("domain");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Calendar");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"user-scalable=no, width=device-width\" />\r\n");
      out.write("<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\r\n");
      out.write("<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\r\n");
      out.write("<meta http-equiv=\"Cache-Control\" content=\"no-cache\" />\r\n");
      out.write("<meta http-equiv=\"Expires\" content=\"0\" />\r\n");
      out.write("<meta http-equiv=\"Pragma\" content=\"no-cache\" />\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"http://netdna.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.js\"></script>\r\n");
      out.write("<!-- 부트스트랩 -->\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"http://netdna.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.css\"\r\n");
      out.write("\trel=\"stylesheet\">\r\n");
      out.write("<script>\r\n");
      out.write("function submit(val, room) {\r\n");
      out.write("document.getElementsByName('date')[0].value = val;\r\n");
      out.write("document.getElementsByName('room')[0].value = room;\r\n");
      out.write("document.getElementById('form').submit();\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<title></title>\r\n");
      out.write("</head>\r\n");
      out.write("<body BACKGROUND=\"./image/bg.png\">\r\n");
      out.write("\t<center>\r\n");
      out.write("\t\t");

			ResvService resvService = new ResvService();

		Calendar cal = Calendar.getInstance();
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		String[][] resv_arr = new String[5][30];
		String kDayOfWeek = "";
		
      out.write("\r\n");
      out.write("\t\t<table cellspacing=0>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td width=150 align=center>날짜</td>\r\n");
      out.write("\t\t\t\t<td width=150 align=center>VIP룸</td>\r\n");
      out.write("\t\t\t\t<td width=150 align=center>일반룸</td>\r\n");
      out.write("\t\t\t\t<td width=150 align=center>합리적인룸</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t");

			for (int i = 0; i < 30; i++) {
			resv_arr[0][i] = sdf.format(cal.getTime());
			int dayOfWeek = cal.get(Calendar.DAY_OF_WEEK);
			switch (dayOfWeek) {
				case 1 :
			kDayOfWeek = "일";
			break;
				case 2 :
			kDayOfWeek = "월";
			break;
				case 3 :
			kDayOfWeek = "화";
			break;
				case 4 :
			kDayOfWeek = "수";
			break;
				case 5 :
			kDayOfWeek = "목";
			break;
				case 6 :
			kDayOfWeek = "금";
			break;
				case 7 :
			kDayOfWeek = "토";
			break;
			}
			resv_arr[1][i] = kDayOfWeek;
			String resvName1 = resvService.selectOne(resv_arr[0][i], 1).get(0).getName();
			String resvName2 = resvService.selectOne(resv_arr[0][i], 2).get(0).getName();
			String resvName3 = resvService.selectOne(resv_arr[0][i], 3).get(0).getName();
		
      out.write("\r\n");
      out.write("\t\t<form method=post id=\"form\" action=\"./d_02_m.jsp\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"date\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"room\">\r\n");
      out.write("\t\t\t<table border=1 cellspacing=0>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td width=130 align=center> ");

 	if ("토".equals(kDayOfWeek) || "일".equals(kDayOfWeek)) {
 
      out.write(" <font color=\"red\" size=1>");
      out.print(resv_arr[0][i]);
      out.write('(');
      out.print(kDayOfWeek);
      out.write(")</font> ");

 	} else {
 
      out.write(" <font size=1>");
      out.print(resv_arr[0][i]);
      out.write('(');
      out.print(kDayOfWeek);
      out.write(")</font> ");

 	}
 
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td width=150 align=center>\r\n");
      out.write("\t\t\t\t\t\t");

							if (resvName1 == null) {
						
      out.write(" <a href=\"#\" onclick=\"submit('");
      out.print(resv_arr[0][i]);
      out.write("', 1)\">예약가능</a> \r\n");
      out.write("\t\t\t\t\t\t");

 	} else {
 
      out.write(' ');
      out.print(resvName1);
      out.write(' ');

 	}
 
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td width=150 align=center>\r\n");
      out.write("\t\t\t\t\t\t");

							if (resvName2 == null) {
						
      out.write(" <a href=\"#\" onclick=\"submit('");
      out.print(resv_arr[0][i]);
      out.write("', 2)\">예약가능</a> \r\n");
      out.write("\t\t\t\t\t\t");

 	} else {
 
      out.write(' ');
      out.print(resvName2);
      out.write(' ');

 	}
 
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td width=150 align=center>\r\n");
      out.write("\t\t\t\t\t\t");

							if (resvName3 == null) {
						
      out.write(" <a href=\"#\" onclick=\"submit('");
      out.print(resv_arr[0][i]);
      out.write("', 3)\">예약가능</a>\r\n");
      out.write("\t\t\t\t\t\t");

							} else {
						
      out.write(' ');
      out.print(resvName3);
      out.write(' ');

 	}
 
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t");

			cal.add(cal.DATE, +1);
			}
		
      out.write("\r\n");
      out.write("\t</center>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
